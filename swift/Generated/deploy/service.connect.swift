// Code generated by protoc-gen-connect-swift. DO NOT EDIT.
//
// Source: deploy/service.proto
//

import Connect
import Foundation
import SwiftProtobuf

public protocol Deploy_DeployServiceClientInterface: Sendable {

    @discardableResult
    func `deploy`(request: Deploy_DeployRequest, headers: Connect.Headers, completion: @escaping @Sendable (ResponseMessage<Deploy_DeployResponse>) -> Void) -> Connect.Cancelable

    @available(iOS 13, *)
    func `deploy`(request: Deploy_DeployRequest, headers: Connect.Headers) async -> ResponseMessage<Deploy_DeployResponse>
}

/// Concrete implementation of `Deploy_DeployServiceClientInterface`.
public final class Deploy_DeployServiceClient: Deploy_DeployServiceClientInterface, Sendable {
    private let client: Connect.ProtocolClientInterface

    public init(client: Connect.ProtocolClientInterface) {
        self.client = client
    }

    @discardableResult
    public func `deploy`(request: Deploy_DeployRequest, headers: Connect.Headers = [:], completion: @escaping @Sendable (ResponseMessage<Deploy_DeployResponse>) -> Void) -> Connect.Cancelable {
        return self.client.unary(path: "/deploy.DeployService/Deploy", request: request, headers: headers, completion: completion)
    }

    @available(iOS 13, *)
    public func `deploy`(request: Deploy_DeployRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Deploy_DeployResponse> {
        return await self.client.unary(path: "/deploy.DeployService/Deploy", request: request, headers: headers)
    }

    public enum Metadata {
        public enum Methods {
            public static let deploy = Connect.MethodSpec(name: "Deploy", service: "deploy.DeployService", type: .unary)
        }
    }
}
