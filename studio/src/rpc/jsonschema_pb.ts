// @generated by protoc-gen-es v1.3.1 with parameter "target=ts"
// @generated from file jsonschema.proto (package jsonschema, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message jsonschema.GetPhoneNumbersResponse
 */
export class GetPhoneNumbersResponse extends Message<GetPhoneNumbersResponse> {
  /**
   * @generated from field: repeated string phone_numbers = 1;
   */
  phoneNumbers: string[] = [];

  /**
   * @generated from field: string summary = 2;
   */
  summary = "";

  constructor(data?: PartialMessage<GetPhoneNumbersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "jsonschema.GetPhoneNumbersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "phone_numbers", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "summary", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPhoneNumbersResponse {
    return new GetPhoneNumbersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPhoneNumbersResponse {
    return new GetPhoneNumbersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPhoneNumbersResponse {
    return new GetPhoneNumbersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetPhoneNumbersResponse | PlainMessage<GetPhoneNumbersResponse> | undefined, b: GetPhoneNumbersResponse | PlainMessage<GetPhoneNumbersResponse> | undefined): boolean {
    return proto3.util.equals(GetPhoneNumbersResponse, a, b);
  }
}

