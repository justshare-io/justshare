html {
  background: black;
}

body {
  margin: 0 !important;
  padding: 0;
}

main {
  min-height: 100vh;
}

span.rsjv-expander {
  color: #888;
}

span.rsjv-expander:hover {
  cursor: pointer;
}

span.rsjv-value {
  color: #3d94bf;
  overflow-wrap: anywhere;
}

.json-viewer {
  max-height: 50em;
  overflow-y: auto;
}

.json-viewer ul {
  padding-left: 1em;
}

.code-block {
  position: relative;

  & select {
    position: absolute;
    right: 0.5rem;
    top: 0.5rem;
  }
}

.ProseMirror {
  min-height: 60vh;
}

.bn-editor {
  padding-inline: 30px;
}

.tiptap {
  > * + * {
    margin-top: 0.75em;
  }

  & pre {
    background: #0d0d0d;
    color: #fff;
    font-family: "JetBrainsMono", monospace;
    padding: 0.75rem 1rem;
    border-radius: 0.5rem;

    & code {
      color: inherit;
      padding: 0;
      background: none;
      font-size: 0.8rem;
    }

    .hljs-comment,
    .hljs-quote {
      color: #616161;
    }

    .hljs-variable,
    .hljs-template-variable,
    .hljs-attribute,
    .hljs-tag,
    .hljs-name,
    .hljs-regexp,
    .hljs-link,
    .hljs-name,
    .hljs-selector-id,
    .hljs-selector-class {
      color: #f98181;
    }

    .hljs-number,
    .hljs-meta,
    .hljs-built_in,
    .hljs-builtin-name,
    .hljs-literal,
    .hljs-type,
    .hljs-params {
      color: #fbbc88;
    }

    .hljs-string,
    .hljs-symbol,
    .hljs-bullet {
      color: #b9f18d;
    }

    .hljs-title,
    .hljs-section {
      color: #faf594;
    }

    .hljs-keyword,
    .hljs-selector-tag {
      color: #70cff8;
    }

    .hljs-emphasis {
      font-style: italic;
    }

    .hljs-strong {
      font-weight: 700;
    }
  }
}

.content-nav {
  position: fixed;
  bottom: 0px;
  left: 0px;
  right: 0px;
  display: flex;
  width: 100%;
  flex-direction: row;
  align-items: center;
  justify-content: space-around;
  padding-bottom: env(safe-area-inset-bottom);
  height: 4rem;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1, oklch(var(--b1)))/var(--tw-bg-opacity);
  color: currentColor;
}

.content-nav > * {
  position: relative;
  display: flex;
  height: 100%;
  flex-basis: 100%;
  cursor: pointer;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 0.25rem;
  border-color: currentColor;
}

.content-nav > *:not(.active) {
  padding-top: 0.125rem;
}

.content-nav > *:where(.active) {
  border-top-width: 2px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
}

.content-nav > *:where(.\!active) {
  border-top-width: 2px !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity))) !important;
}

.content-nav > *.disabled,
.content-nav > *[disabled] {
  pointer-events: none;
  --tw-border-opacity: 0;
  background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
  --tw-bg-opacity: 0.1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
  --tw-text-opacity: 0.2;
}

.content-nav > *.\!disabled {
  pointer-events: none !important;
  --tw-border-opacity: 0 !important;
  background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity))) !important;
  --tw-bg-opacity: 0.1 !important;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity))) !important;
  --tw-text-opacity: 0.2 !important;
}

.content-nav > * .label {
  font-size: 1rem;
  line-height: 1.5rem;
}

.content-nav > * .\!label {
  font-size: 1rem !important;
  line-height: 1.5rem !important;
}

.btn:active:hover,
.btn:active:focus {
  animation: button-pop 0s ease-out;
  transform: scale(var(--btn-focus-scale, 0.97));
}

.content-drawer {
  position: relative;
  display: grid;
  grid-template-rows: auto max-content; /* Change to grid-template-rows for vertical layout */
  width: 100%;
}

.content-drawer-content {
  grid-row-start: 1; /* Adjust to the first row */
  min-width: 0px; /* No change needed */
}

.content-drawer-side {
  pointer-events: none;
  position: fixed;
  inset-inline-start: 0px;
  bottom: 0px; /* Change from top to bottom */
  display: grid;
  width: 100%;
  grid-template-rows: repeat(1, minmax(0, 1fr)); /* Use rows instead of columns */
  align-items: end; /* Align items to the bottom */
  justify-items: start;
  overflow-y: hidden; /* Change to overflow-x for vertical layout */
  overscroll-behavior: contain;
}

.content-drawer-side > .content-drawer-overlay {
  position: sticky;
  bottom: 0px; /* Change from top to bottom */
  place-self: stretch;
  cursor: pointer;
  background-color: transparent;
  transition: color, background-color, border-color, text-decoration-color, fill, stroke 200ms cubic-bezier(0.4, 0, 0.2, 1);
}

.content-drawer-side > * {
  grid-row-start: 1; /* Adjust grid positioning for vertical layout */
}

.content-drawer-side > *:not(.content-drawer-overlay) {
  transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1);
  will-change: transform;
  transform: translateY(100%); /* Change to translateY for vertical movement */
}

.content-drawer-toggle {
  position: fixed;
  height: 0;
  width: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  opacity: 0;
}

.content-drawer-toggle:checked ~ .content-drawer-side {
  pointer-events: auto;
  visibility: visible;
}

.content-drawer-toggle:checked ~ .content-drawer-side > *:not(.content-drawer-overlay) {
  transform: translateY(0%); /* Change to translateY for vertical movement */
}

.content-drawer-end .content-drawer-toggle ~ .content-drawer-content {
  grid-row-start: 2; /* Adjust for vertical layout */
}

.content-drawer-end .content-drawer-toggle ~ .content-drawer-side {
  justify-items: end; /* No change needed */
}

.content-drawer-end .content-drawer-toggle:checked ~ .content-drawer-side > *:not(.content-drawer-overlay) {
  transform: translateY(0%); /* Ensure the transform is reset on toggle */
}

.resize-container {
  display: flex;
  align-items: stretch; /* Align the height of the children */
}

.resizable {
  flex: 1; /* Each takes equal space */
  overflow: auto; /* Adds scrollbars if content overflows */
  resize: horizontal; /* Allow horizontal resizing */
  border: 1px solid black; /* Just for visibility */
  min-width: 50px; /* Minimum width to prevent collapsing */
}

.resize-left {
  width: 50%;
  flex-grow: 1;
  margin-right: 5px; /* Space between the elements */
}

.resize-right {
    width: 50%;
  flex-grow: 1;
  margin-left: 5px; /* Space between the elements */
}